{"version":3,"sources":["BumbleBeeApp.js","serviceWorker.js","index.js"],"names":["bumblebee","BumbleBee","hotword","setWorkersPath","addHotword","Say","setWorkers","voice","language","profile","BumbleBeeApp","Component","constructor","super","this","state","hotwords","Object","keys","bumblebee_started","spokenHotwords","selectedHotword","sensivitiyChanged","sensitivity","action","muted","microphones","microphone","sounds","porcupine","Audio","computer","on","word","recognizeHotword","window","callback","intData","floatData","sampleRate","componentDidMount","setHotword","analyser","console","log","canvas","document","getElementById","SpectrumAnalyser","setMuted","start","getMicrophones","then","mics","setState","catch","render","_jsxs","className","children","_jsx","value","onChange","e","changeMicrophone","renderMicrophones","changeHotword","renderHotwordOptions","changeSensitivity","renderSensitivities","changeAction","id","onClick","toggleHotword","toggleMuted","width","height","renderSay","renderBumblebees","join","map","mic","i","name","h","unshift","s","n","p","push","target","options","selectedIndex","alert","setSensitivity","stop","setMicrophone","play","say","b","Boolean","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aee8d36f.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Say from 'jaxcore-say';\nimport BumbleBee, {SpectrumAnalyser} from 'bumblebee-hotword';\n\n// import custom hotword data file:\n// import blueberryData from './blueberry'\n\nconst bumblebee = new BumbleBee();\nconst hotword = 'computer';\n\nbumblebee.setWorkersPath('./bumblebee-workers');\n\nbumblebee.addHotword(hotword);\n/*bumblebee.addHotword('grasshopper');\nbumblebee.addHotword('alexa');\nbumblebee.addHotword('bumblebee');\n  bumblebee.addHotword('hey_edison');\nbumblebee.addHotword('hey_google');\nbumblebee.addHotword('hey_siri');\nbumblebee.addHotword('jarvis');\nbumblebee.addHotword('ok_google');\nbumblebee.addHotword('porcupine');\n// add custom hotword data to bumblebee:\nbumblebee.addHotword('blueberry', blueberryData, 0.5);\nbumblebee.addHotword('terminator');*/\n\n// temporarily set only on of the hotwords active:\n// bumblebee.setHotword('bumblebee');\n\nSay.setWorkers({\n\t'espeak': 'webworkers/espeak-en-worker.js'\n});\n\nvar voice = new Say({\n\tlanguage: 'en',\n\tprofile: 'Jack'\n});\n\nclass BumbleBeeApp extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\t\n\t\tthis.state = {\n\t\t\thotwords: Object.keys(bumblebee.hotwords),\n\t\t\tbumblebee_started: false,\n\t\t\tspokenHotwords: [],\n\t\t\tselectedHotword: hotword,\n\t\t\tsensivitiyChanged: false,\n\t\t\tsensitivity: 0.9,\n\t\t\taction: 'sounds',\n\t\t\tmuted: false,\n\t\t\tmicrophones: [],\n\t\t\tmicrophone: 'default'\n\t\t};\n\t\t\n\t\tthis.sounds = {\n\t\t\tporcupine: new Audio('sounds/nova_hey.mp3'),\n\t\t\tcomputer: new Audio('sounds/blip.mp3'),\n\t\t\t//blueberry: new Audio('sounds/computer.mp3'),\n\t\t};\n\t\t\n\t\tbumblebee.on('hotword', (word) => {\n\t\t\t  this.recognizeHotword(word);\n        if (window.callback) window.callback();\n\t\t});\n\t\t\n\t\tbumblebee.on('data', (intData, floatData, sampleRate, hotword) => {\n\t\t\t// receive the microphone audio data here either in signed 8 bit integer, or float32 array\n\t\t\t// if hotword is a string then porcupine has identified a hotword\n\t\t});\n\t}\n\t\n\tcomponentDidMount() {\n\t\tbumblebee.setHotword(this.state.selectedHotword);\n\t\t\n\t\tbumblebee.on('analyser', (analyser) => {\n\t\t\tconsole.log('analyser', analyser);\n\t\t\tvar canvas = document.getElementById('oscilloscope');\n\t\t\tthis.analyser = new SpectrumAnalyser(analyser, canvas);\n\t\t\tif (this.state.muted) {\n\t\t\t\tbumblebee.setMuted(true);\n\t\t\t\tthis.analyser.setMuted(true);\n\t\t\t}\n\t\t\tthis.analyser.start();\n\t\t});\n\t\t\n\t\tbumblebee.getMicrophones().then(mics => {\n\t\t\tthis.setState({\n\t\t\t\tmicrophones: mics\n\t\t\t})\n\t\t}).catch(console);\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\tMicrophone: <select value={this.state.microphone} onChange={e => this.changeMicrophone(e)}>\n\t\t\t\t\t{ this.renderMicrophones() }\n\t\t\t\t</select>\n\t\t\t\t\n\t\t\t\t<br/>\n\t\t\t\t\n\t\t\t\tHotword: <select value={this.state.selectedHotword||''} onChange={e => this.changeHotword(e)}>\n\t\t\t\t\t{ this.renderHotwordOptions() }\n\t\t\t\t</select>\n\t\t\t\t\n\t\t\t\t<br/>\n\t\t\t\t\n\t\t\t\tSensitivity: <select value={this.state.sensitivity||''} onChange={e => this.changeSensitivity(e)}>\n\t\t\t\t\t{ this.renderSensitivities() }\n\t\t\t\t</select>\n\t\t\t\t\n\t\t\t\t<br/>\n\t\t\t\t\n\t\t\t\tAction: <select value={this.state.action||''} onChange={e => this.changeAction(e)}>\n\t\t\t\t\t<option value=\"sounds\">Sounds</option>\n\t\t\t\t\t<option value=\"texttospeech\">Speech To Text</option>\n\t\t\t\t</select>\n\t\t\t\t\n\t\t\t\t<br/>\n\t\t\t\t\n\t\t\t\t<button id=\"button\" onClick={e => this.toggleHotword()}>\n\t\t\t\t\t{this.state.bumblebee_started ? 'Stop' : 'Start'}\n\t\t\t\t</button>\n\t\t\t\t\n\t\t\t\t<button onClick={e => this.toggleMuted()}>\n\t\t\t\t\t{this.state.muted ? 'Unmute' : 'Mute'}\n\t\t\t\t</button>\n\t\t\t\t\n\t\t\t\t<br/>\n\t\t\t\t<canvas id=\"oscilloscope\" width=\"800\" height=\"100\" />\n\t\t\t\t\n\t\t\t\t{this.renderSay()}\n\t\t\t\t\n\t\t\t\t{this.renderBumblebees()}\n\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n\t\n\trenderSay() {\n\t\tif (!this.state.bumblebee_started) return;\n\t\tif (this.state.selectedHotword) return (<h3>Say \"{this.state.selectedHotword}\":</h3>);\n\t\telse return (<h4>Say any of the following: {this.state.hotwords.join(', ')}:</h4>);\n\t}\n\t\n\trenderMicrophones() {\n\t\tlet h = this.state.microphones.map((mic,i) => {\n\t\t\treturn (<option key={i} value={mic.id}>{mic.name}</option>);\n\t\t});\n\t\treturn h;\n\t}\n\t\n\trenderHotwordOptions() {\n\t\tlet h = this.state.hotwords.map((hotword,i) => {\n\t\t\treturn (<option key={i} value={hotword}>{hotword}</option>);\n\t\t});\n\t\th.unshift(<option key={'null'} value={''}>* Any *</option>);\n\t\treturn h;\n\t}\n\t\n\trenderSensitivities(e) {\n\t\tlet s = [];\n\t\tfor (let i=0;i<=10;i++) {\n\t\t\tlet n = i / 10;\n\t\t\tlet p = i * 10;\n\t\t\ts.push(<option key={i} value={n}>{p}%</option>);\n\t\t}\n\t\treturn s;\n\t}\n\t\n\tchangeAction(e) {\n\t\tlet action = e.target.options[e.target.selectedIndex].value;\n\t\tthis.setState({\n\t\t\taction\n\t\t});\n\t}\n\t\n\tchangeSensitivity(e) {\n\t\tlet sensitivity = e.target.options[e.target.selectedIndex].value;\n\t\t\n\t\tif (this.state.sensivitiyChanged) {\n\t\t\talert('Sensitivity can only be set before .start(), reload and try again');\n\t\t}\n\t\telse {\n\t\t\tthis.setState({\n\t\t\t\tsensitivity\n\t\t\t});\n\t\t\tbumblebee.setSensitivity(sensitivity);\n\t\t}\n\t}\n\t\n\tchangeMicrophone(e) {\n\t\tlet microphone = e.target.options[e.target.selectedIndex].value;\n\t\tthis.stop();\n\t\tthis.setState({\n\t\t\tmicrophone\n\t\t}, () => {\n\t\t\tbumblebee.setMicrophone(microphone);\n\t\t\tthis.start();\n\t\t});\n\t}\n\t\n\tchangeHotword(e) {\n\t\t// todo: move to server\n\t\tlet selectedHotword = e.target.options[e.target.selectedIndex].value;\n\t\tbumblebee.setHotword(selectedHotword);\n\t\tthis.setState({\n\t\t\tselectedHotword,\n\t\t\tspokenHotwords: []\n\t\t});\n\t}\n\t\n\ttoggleHotword() {\n\t\tif (!this.state.bumblebee_started) {\n\t\t\tthis.start();\n\t\t}\n\t\telse {\n\t\t\tthis.stop();\n\t\t}\n\t}\n\t\n\tstart() {\n\t\tlet hotword = this.state.selectedHotword;\n\t\tconsole.log('starting', hotword);\n\t\t\n\t\tthis.setState({\n\t\t\tbumblebee_started: true,\n\t\t\tspokenHotwords: [],\n\t\t\tsensivitiyChanged: true\n\t\t});\n\t\t\n\t\tbumblebee.start();\n\t}\n\tstop() {\n\t\tbumblebee.stop();\n\t\tthis.setState({\n\t\t\tbumblebee_started: false,\n\t\t\tspokenHotwords: []\n\t\t});\n\t}\n\t\n\ttoggleMuted() {\n\t\tconst muted = !this.state.muted;\n\t\tthis.setState({\n\t\t\tmuted\n\t\t}, () => {\n\t\t\tbumblebee.setMuted(muted);\n\t\t\tif (this.analyser) this.analyser.setMuted(muted);\n\t\t});\n\t}\n\t\n\trecognizeHotword(hotword) {\n\t\tif (hotword === this.state.selectedHotword || !this.state.selectedHotword) {\n\t\t\t\n\t\t\tif (this.state.action === 'sounds') {\n\t\t\t\tif (this.sounds[hotword]) this.sounds[hotword].play();\n\t\t\t}\n\t\t\telse if (this.state.action === 'texttospeech') {\n\t\t\t\tvoice.say(hotword + 'detected');\n\t\t\t}\n\t\t\t\n\t\t\tconst spokenHotwords = this.state.spokenHotwords;\n\t\t\tspokenHotwords.push(hotword);\n\t\t\t\n\t\t\tconsole.log('recognized hotword', hotword);\n\t\t\tthis.setState({\n\t\t\t\tspokenHotwords\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tconsole.log('did not recognize', hotword);\n\t\t}\n\t}\n\t\n\trenderBumblebees() {\n\t\tlet b = this.state.spokenHotwords.map((word,i) => {\n\t\t\treturn (<li key={i}>{word}</li>);\n\t\t});\n\t\treturn (<ul>\n\t\t\t{b}\n\t\t</ul>);\n\t}\n\t\n}\n\nexport default BumbleBeeApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport BumbleBeeApp from './BumbleBeeApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BumbleBeeApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}